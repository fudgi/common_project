{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-app-06/src/screens/content/respond/respond.screen.js\";\nimport React from 'react';\nimport RespondTop from './respond_top/respond_top';\nimport MyAnswerBottom from './respond_bottom/myAnswer';\nimport AnswersToMeBottom from './respond_bottom/answersToMe';\nimport MyRespondChanger from './respond_bottom/respondChanger';\nimport Loading from '../../common_components/loading';\nimport Fetch from '../../service/fetch';\n\nvar RespondScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RespondScreen, _React$Component);\n\n  function RespondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RespondScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RespondScreen).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      info_items: [],\n      bottom_items: []\n    };\n    return _this;\n  }\n\n  _createClass(RespondScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Fetch.getData('react-app-06/src/screens/content/respond/php/respond_top.php', {\n        request_id: this.props.request_id\n      }).then(function (result) {\n        return _this2.setState({\n          isLoaded: true,\n          info_items: result[0]\n        });\n      }, function (error) {\n        return _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n      var path;\n\n      if (this.props.screen_id != \"0\") {\n        if (this.props.screen_id == \"1\") {\n          path = \"first path\"; //запрос на все отклики, кроме user_id\n        } else path = \"react-app-06/src/screens/content/respond/php/respondChange.php\"; //нижняя часть отклика на запрос(пользователь, цена, описание)\n\n\n        Fetch.getData(path, {\n          request_id: this.props.request_id,\n          user_id: this.props.user_id\n        }).then(function (result) {\n          return _this2.setState({\n            isLoaded: true,\n            bottom_items: result\n          });\n        }).catch(function (error) {\n          return _this2.setState({\n            isLoaded: true,\n            error: error\n          });\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n      var bottomPart;\n\n      switch (this.props.screen_id) {\n        case \"0\":\n          bottomPart = React.createElement(MyAnswerBottom, {\n            user_id: this.props.user_id,\n            request_id: this.props.request_id,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          });\n          break;\n\n        case \"1\":\n          bottomPart = React.createElement(AnswersToMeBottom, {\n            user_id: this.props.user_id,\n            request_id: this.props.request_id,\n            items: this.state.bottom_items,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          });\n          break;\n\n        case \"2\":\n          bottomPart = React.createElement(MyRespondChanger, {\n            items: this.state.bottom_items,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          });\n          break;\n      }\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"mx-auto mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(RespondTop, {\n          screen_id: this.props.screen_id,\n          data: this.state.info_items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), bottomPart);\n      }\n    }\n  }]);\n\n  return RespondScreen;\n}(React.Component);\n\nexport default RespondScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-app-06/src/screens/content/respond/respond.screen.js"],"names":["React","RespondTop","MyAnswerBottom","AnswersToMeBottom","MyRespondChanger","Loading","Fetch","RespondScreen","props","state","error","isLoaded","info_items","bottom_items","getData","request_id","then","result","setState","path","screen_id","user_id","catch","bottomPart","respondingChange","message","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport RespondTop from './respond_top/respond_top'\r\nimport MyAnswerBottom from './respond_bottom/myAnswer'\r\nimport AnswersToMeBottom from './respond_bottom/answersToMe'\r\nimport MyRespondChanger from './respond_bottom/respondChanger'\r\nimport Loading from '../../common_components/loading'\r\n\r\nimport Fetch from '../../service/fetch'\r\n\r\nclass RespondScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            info_items: [],\r\n            bottom_items:[]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Fetch.getData('react-app-06/src/screens/content/respond/php/respond_top.php', {request_id: this.props.request_id})\r\n            .then((result) => (this.setState({isLoaded: true, info_items: result[0]})),\r\n                  (error) => (this.setState({isLoaded: true, error}))\r\n        )\r\n        let path;\r\n        if(this.props.screen_id != \"0\"){\r\n            if(this.props.screen_id == \"1\"){\r\n                path = \"first path\"; //запрос на все отклики, кроме user_id\r\n            }\r\n            else path = \"react-app-06/src/screens/content/respond/php/respondChange.php\"; //нижняя часть отклика на запрос(пользователь, цена, описание)\r\n            Fetch.getData(path,{request_id: this.props.request_id, user_id: this.props.user_id})\r\n            .then((result)=> this.setState({isLoaded: true, bottom_items: result}))\r\n            .catch((error) => this.setState({isLoaded: true, error}))\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {error, isLoaded} = this.state;\r\n\r\n        let bottomPart;\r\n\r\n        switch(this.props.screen_id){\r\n            case \"0\":\r\n                bottomPart = <MyAnswerBottom user_id={this.props.user_id} request_id={this.props.request_id} respondingChange={this.props.respondingChange}/>\r\n                break;\r\n            case \"1\":\r\n                bottomPart = <AnswersToMeBottom user_id={this.props.user_id} request_id={this.props.request_id} items={this.state.bottom_items} respondingChange={this.props.respondingChange}/>\r\n                break;\r\n            case \"2\":\r\n                bottomPart = <MyRespondChanger items={this.state.bottom_items} respondingChange={this.props.respondingChange} />\r\n                break;\r\n        }\r\n        \r\n        if (error) {\r\n            return <div className=\"mx-auto mt-3\">Ошибка: {error.message}</div>;\r\n        } \r\n        else if (!isLoaded) {\r\n            return <Loading />\r\n        }\r\n        else {\r\n            return( \r\n                <React.Fragment>\r\n                    <RespondTop screen_id={this.props.screen_id} data={this.state.info_items}/>\r\n                    {bottomPart}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default RespondScreen"]},"metadata":{},"sourceType":"module"}