{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-app-06/src/screens/content/respond/respond.screen.js\";\nimport React from 'react';\nimport RespondTop from './respond_top/respond_top';\nimport MyAnswerBottom from './respond_bottom/myAnswer';\nimport AnswersToMeBottom from './respond_bottom/answersToMe';\nimport MyRespondChanger from './respond_bottom/respondChanger';\nimport Loading from '../../common_components/loading';\nimport Fetch from '../../service/fetch';\n\nvar RespondScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RespondScreen, _React$Component);\n\n  function RespondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RespondScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RespondScreen).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      info_items: []\n    };\n    return _this;\n  }\n\n  _createClass(RespondScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // alert(this.props.request_id)\n      Fetch.getData('react-app-06/src/screens/content/respond/php/respond_top.php', {\n        request_id: this.props.request_id\n      }).then(function (result) {\n        return _this2.setState({\n          isLoaded: true,\n          info_items: result\n        });\n      }, function (error) {\n        return _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      }); // let path;\n      // if(this.props.screen_id != \"0\"){\n      //     if(this.props.screen_id == \"1\"){\n      //         path = \"first path\";           //запрос на все отклики, кроме user_id\n      //     }\n      //     else path = \"second path\";      //нижняя часть отклика на запрос(пользователь, цена, описание)\n      //     Fetch.getData(path,{request_id: this.props.request_id})\n      //     .then((result)=>(this.setState({isLoaded: true, bottom_items: result})))   \n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n      var bottomPart;\n\n      switch (this.props.screen_id) {\n        case \"0\":\n          bottomPart = React.createElement(MyAnswerBottom, {\n            user_id: this.props.user_id,\n            request_id: this.props.request_id,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          });\n          break;\n\n        case \"1\":\n          bottomPart = React.createElement(AnswersToMeBottom, {\n            user_id: this.props.user_id,\n            request_id: this.props.request_id,\n            items: this.state.bottom_items,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          });\n          break;\n\n        case \"2\":\n          bottomPart = React.createElement(MyRespondChanger, {\n            items: this.state.bottom_items,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          });\n          break;\n      }\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"mx-auto mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(RespondTop, {\n          data: this.state.info_items,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), bottomPart);\n      }\n    }\n  }]);\n\n  return RespondScreen;\n}(React.Component);\n\nexport default RespondScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-app-06/src/screens/content/respond/respond.screen.js"],"names":["React","RespondTop","MyAnswerBottom","AnswersToMeBottom","MyRespondChanger","Loading","Fetch","RespondScreen","props","state","error","isLoaded","info_items","getData","request_id","then","result","setState","bottomPart","screen_id","user_id","respondingChange","bottom_items","message","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport RespondTop from './respond_top/respond_top'\r\nimport MyAnswerBottom from './respond_bottom/myAnswer'\r\nimport AnswersToMeBottom from './respond_bottom/answersToMe'\r\nimport MyRespondChanger from './respond_bottom/respondChanger'\r\nimport Loading from '../../common_components/loading'\r\n\r\nimport Fetch from '../../service/fetch'\r\n\r\nclass RespondScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            info_items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // alert(this.props.request_id)\r\n        Fetch.getData('react-app-06/src/screens/content/respond/php/respond_top.php', {request_id: this.props.request_id})\r\n            .then((result) => (this.setState({isLoaded: true, info_items: result})),\r\n                  (error) => (this.setState({isLoaded: true, error}))\r\n        )\r\n        // let path;\r\n        // if(this.props.screen_id != \"0\"){\r\n        //     if(this.props.screen_id == \"1\"){\r\n        //         path = \"first path\";           //запрос на все отклики, кроме user_id\r\n        //     }\r\n        //     else path = \"second path\";      //нижняя часть отклика на запрос(пользователь, цена, описание)\r\n        //     Fetch.getData(path,{request_id: this.props.request_id})\r\n        //     .then((result)=>(this.setState({isLoaded: true, bottom_items: result})))   \r\n        // }\r\n    }\r\n\r\n    render(){\r\n        const {error, isLoaded} = this.state;\r\n\r\n        let bottomPart;\r\n\r\n        switch(this.props.screen_id){\r\n            case \"0\":\r\n                bottomPart = <MyAnswerBottom user_id={this.props.user_id} request_id={this.props.request_id} respondingChange={this.props.respondingChange}/>\r\n                break;\r\n            case \"1\":\r\n                bottomPart = <AnswersToMeBottom user_id={this.props.user_id} request_id={this.props.request_id} items={this.state.bottom_items} respondingChange={this.props.respondingChange}/>\r\n                break;\r\n            case \"2\":\r\n                bottomPart = <MyRespondChanger items={this.state.bottom_items} respondingChange={this.props.respondingChange} />\r\n                break;\r\n        }\r\n        \r\n        if (error) {\r\n            return <div className=\"mx-auto mt-3\">Ошибка: {error.message}</div>;\r\n        } \r\n        else if (!isLoaded) {\r\n            return <Loading />\r\n        }\r\n        else {\r\n            return( \r\n                <React.Fragment>\r\n                    <RespondTop data={this.state.info_items}/>\r\n                    {bottomPart}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default RespondScreen"]},"metadata":{},"sourceType":"module"}