{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/react-app-04/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/react-app-04/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/react-app-04/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/react-app-04/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/react-app-04/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-app-04/src/screens/content/respond/respond.screen.js\";\nimport React from 'react';\nimport RespondTop from './respond_top/respond_top';\nimport MyAnswerBottom from './respond_bottom/myAnswer';\nimport AnswersToMeBottom from './respond_bottom/answersToMe';\n\nvar RespondScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RespondScreen, _React$Component);\n\n  function RespondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RespondScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RespondScreen).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      info_items: []\n    };\n    return _this;\n  }\n\n  _createClass(RespondScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var path;\n      if (this.props.screen_id) path = 'react-app-03/src/screens/content/respond/php/requests.php';else path = 'react-app-03/src/screens/content/respond/php/myRequests.php';\n      var dataToSend = {\n        method: \"POST\",\n        body: JSON.stringify({\n          user_id: this.props.user_id\n        })\n      };\n      fetch(path, dataToSend).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        return _this2.setState({\n          isLoaded: true,\n          items: result\n        });\n      }, function (error) {\n        return _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bottomPart;\n\n      if (this.props.screen_id == 0) {\n        bottomPart = React.createElement(MyAnswerBottom, {\n          respondingChange: this.props.respondingChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      } else bottomPart = React.createElement(AnswersToMeBottom, {\n        respondingChange: this.props.respondingChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(RespondTop, {\n        items: this.state.info_items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), bottomPart);\n    }\n  }]);\n\n  return RespondScreen;\n}(React.Component);\n\nexport default RespondScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-app-04/src/screens/content/respond/respond.screen.js"],"names":["React","RespondTop","MyAnswerBottom","AnswersToMeBottom","RespondScreen","props","state","error","isLoaded","info_items","path","screen_id","dataToSend","method","body","JSON","stringify","user_id","fetch","then","res","json","result","setState","items","bottomPart","respondingChange","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,KAAK,EAAE,IADA;AAEPC,MAAAA,QAAQ,EAAE,KAFH;AAGPC,MAAAA,UAAU,EAAE;AAHL,KAAX;AAFc;AAOjB;;;;wCAEmB;AAAA;;AAChB,UAAIC,IAAJ;AACA,UAAI,KAAKL,KAAL,CAAWM,SAAf,EAA0BD,IAAI,GAAC,2DAAL,CAA1B,KACKA,IAAI,GAAC,6DAAL;AAEL,UAAIE,UAAU,GAAG;AAAGC,QAAAA,MAAM,EAAE,MAAX;AACGC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWY;AAArB,SAAf;AADR,OAAjB;AAGAC,MAAAA,KAAK,CAACR,IAAD,EAAOE,UAAP,CAAL,CACKO,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAACG,MAAD;AAAA,eAAa,MAAI,CAACC,QAAL,CAAc;AAACf,UAAAA,QAAQ,EAAE,IAAX;AAAiBgB,UAAAA,KAAK,EAAEF;AAAxB,SAAd,CAAb;AAAA,OAFV,EAGU,UAACf,KAAD;AAAA,eAAY,MAAI,CAACgB,QAAL,CAAc;AAACf,UAAAA,QAAQ,EAAE,IAAX;AAAiBD,UAAAA,KAAK,EAALA;AAAjB,SAAd,CAAZ;AAAA,OAHV;AAKH;;;6BAEO;AACJ,UAAIkB,UAAJ;;AACA,UAAG,KAAKpB,KAAL,CAAWM,SAAX,IAAwB,CAA3B,EAA6B;AACzBc,QAAAA,UAAU,GAAG,oBAAC,cAAD;AAAgB,UAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWqB,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAb;AACH,OAFD,MAGKD,UAAU,GAAC,oBAAC,iBAAD;AAAmB,QAAA,gBAAgB,EAAE,KAAKpB,KAAL,CAAWqB,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;;AAEL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWG,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKgB,UAFL,CADJ;AAMH;;;;EAtCuBzB,KAAK,CAAC2B,S;;AAyClC,eAAevB,aAAf","sourcesContent":["import React from 'react'\r\nimport RespondTop from './respond_top/respond_top'\r\nimport MyAnswerBottom from './respond_bottom/myAnswer'\r\nimport AnswersToMeBottom from './respond_bottom/answersToMe'\r\n\r\nclass RespondScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            info_items: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        let path;\r\n        if (this.props.screen_id) path='react-app-03/src/screens/content/respond/php/requests.php';\r\n        else path='react-app-03/src/screens/content/respond/php/myRequests.php';\r\n\r\n        let dataToSend = {  method: \"POST\",\r\n                            body:JSON.stringify({user_id: this.props.user_id})\r\n                        };\r\n        fetch(path, dataToSend)\r\n            .then(res => res.json())\r\n            .then((result) => (this.setState({isLoaded: true, items: result})),\r\n                  (error) => (this.setState({isLoaded: true, error}))\r\n            )\r\n    }\r\n\r\n    render(){\r\n        let bottomPart;\r\n        if(this.props.screen_id == 0){\r\n            bottomPart = <MyAnswerBottom respondingChange={this.props.respondingChange}/>\r\n        }\r\n        else bottomPart=<AnswersToMeBottom respondingChange={this.props.respondingChange}/>\r\n\r\n        return( \r\n            <React.Fragment>\r\n                <RespondTop items={this.state.info_items}/>\r\n                {bottomPart}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RespondScreen"]},"metadata":{},"sourceType":"module"}