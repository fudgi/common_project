{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Applications/MAMP/htdocs/react-app-06/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-app-06/src/screens/content/request_list/request_list.screen.js\";\nimport React from 'react';\nimport Category from './category/category';\nimport Filter from './center/filter_top';\nimport RequestComponent from '../../common_components/request_component';\nimport Loading from '../../common_components/loading';\nimport Fetch from '../../service/fetch';\nimport '../../../css/simple-sidebar.css';\n\nvar RequestList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RequestList, _React$Component);\n\n  function RequestList(props) {\n    var _this;\n\n    _classCallCheck(this, RequestList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RequestList).call(this, props));\n    _this.state = {\n      selected_category: \"1\",\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    _this.categoryChange = _this.categoryChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handlerRespondingChange = this.handlerRespondingChange.bind(this);\n\n    _this.HandleNetworkUpdate = _this.HandleNetworkUpdate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RequestList, [{\n    key: \"categoryChange\",\n    value: function categoryChange(data) {\n      this.setState(data);\n    } // handlerRespondingChange(data){ \n    //     if(this.props.screen_id == \"2\"){\n    //         let path = \"react-app-03/src/screens/content/request_list/php/deleteRespond.php\";\n    //         //удаление 'отклика' из БД\n    //         let dataToSend = {user_id: this.props.user_id, request_id: data.request_id};\n    //         Fetch.getData(path, dataToSend)\n    //         .then((result) => alert('Успешное удаление отклика'))\n    //         .catch((error) => {alert(error);return;});\n    //         //удаление 'отклика' из массива\n    //         let arr = this.prevState.items;\n    //         for(let i=0; i<arr.length; i++){\n    //             if(data.request_id == arr[i].request_id){\n    //                 arr.splice(i,1);\n    //             }\n    //         }\n    //         this.setState({items: arr});\n    //     }\n    //     else \n    //     this.props.respondingChange(data);\n    // }\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.HandleNetworkUpdate();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.screen_id != prevProps.screen_id) {\n        this.HandleNetworkUpdate();\n      }\n    } //для связи с БД и обновления списка\n\n  }, {\n    key: \"HandleNetworkUpdate\",\n    value: function HandleNetworkUpdate() {\n      var _this2 = this;\n\n      var path;\n\n      switch (this.props.screen_id) {\n        case \"0\":\n          path = 'react-app-06/src/screens/content/request_list/php/requests.php';\n          break;\n\n        case \"1\":\n          path = 'react-app-06/src/screens/content/request_list/php/myRequests.php';\n          break;\n\n        case \"2\":\n          path = 'react-app-06/src/screens/content/request_list/php/myResponds.php';\n          break;\n      }\n\n      Fetch.getData(path, {\n        user_id: this.props.user_id\n      }).then(function (result) {\n        alert('1');\n\n        _this2.setState({\n          isLoaded: true,\n          items: result,\n          error: null\n        });\n      }).catch(function (error) {\n        return _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var Sidebar, filter;\n\n      if (this.props.screen_id == \"0\") {\n        Sidebar = React.createElement(Category, {\n          categoryChange: this.categoryChange,\n          selected_category: this.state.selected_category,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n        filter = React.createElement(Filter, {\n          respondingChange: this.props.respondingChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          item = _this$state.item;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"mx-auto mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(\"main\", {\n          className: \"mt-2\",\n          id: \"wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, Sidebar, React.createElement(\"div\", {\n          id: \"page-content-wrapper\",\n          className: \"d-flex\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"center-field flex-fill\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, filter, React.createElement(\"div\", {\n          className: \"request-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, this.state.items.map(function (item) {\n          return React.createElement(RequestComponent, {\n            key: item.request_id,\n            type: _this3.props.screen_id,\n            data: item,\n            respondingChange: _this3.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          });\n        }))), React.createElement(\"div\", {\n          className: \"right-side d-none d-xl-block\",\n          style: {\n            minWidth: 250\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return RequestList;\n}(React.Component);\n\nexport default RequestList;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-app-06/src/screens/content/request_list/request_list.screen.js"],"names":["React","Category","Filter","RequestComponent","Loading","Fetch","RequestList","props","state","selected_category","error","isLoaded","items","categoryChange","bind","HandleNetworkUpdate","data","setState","prevProps","screen_id","path","getData","user_id","then","result","alert","catch","Sidebar","filter","respondingChange","item","message","map","request_id","minWidth","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport Category from './category/category'\r\nimport Filter from './center/filter_top'\r\nimport RequestComponent from '../../common_components/request_component'\r\nimport Loading from '../../common_components/loading'\r\nimport Fetch from '../../service/fetch'\r\n\r\nimport '../../../css/simple-sidebar.css';\r\n\r\nclass RequestList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            selected_category:\"1\",\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n        this.categoryChange = this.categoryChange.bind(this);\r\n        // this.handlerRespondingChange = this.handlerRespondingChange.bind(this);\r\n        this.HandleNetworkUpdate = this.HandleNetworkUpdate.bind(this);\r\n    }\r\n\r\n    categoryChange(data){\r\n        this.setState(data);\r\n    }\r\n\r\n    // handlerRespondingChange(data){ \r\n    //     if(this.props.screen_id == \"2\"){\r\n\r\n    //         let path = \"react-app-03/src/screens/content/request_list/php/deleteRespond.php\";\r\n    //         //удаление 'отклика' из БД\r\n    //         let dataToSend = {user_id: this.props.user_id, request_id: data.request_id};\r\n    //         Fetch.getData(path, dataToSend)\r\n    //         .then((result) => alert('Успешное удаление отклика'))\r\n    //         .catch((error) => {alert(error);return;});\r\n            \r\n    //         //удаление 'отклика' из массива\r\n    //         let arr = this.prevState.items;\r\n    //         for(let i=0; i<arr.length; i++){\r\n    //             if(data.request_id == arr[i].request_id){\r\n    //                 arr.splice(i,1);\r\n    //             }\r\n    //         }\r\n    //         this.setState({items: arr});\r\n    //     }\r\n    //     else \r\n    //     this.props.respondingChange(data);\r\n    // }\r\n    \r\n    componentDidMount() {\r\n        this.HandleNetworkUpdate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.screen_id != prevProps.screen_id){\r\n            this.HandleNetworkUpdate();\r\n        }\r\n    }\r\n\r\n    //для связи с БД и обновления списка\r\n    HandleNetworkUpdate(){\r\n        let path;\r\n        switch (this.props.screen_id){\r\n            case \"0\":\r\n                path='react-app-06/src/screens/content/request_list/php/requests.php';\r\n                break;\r\n            case \"1\":\r\n                path='react-app-06/src/screens/content/request_list/php/myRequests.php';\r\n                break;\r\n            case \"2\":\r\n                path='react-app-06/src/screens/content/request_list/php/myResponds.php';\r\n                break;\r\n        }\r\n        Fetch.getData(path, {user_id: this.props.user_id})\r\n        .then((result) => {alert('1');this.setState({isLoaded: true, items: result, error: null})})\r\n        .catch((error) => this.setState({isLoaded: true, error}))\r\n    }\r\n    \r\n    render() {\r\n        let Sidebar, filter;\r\n        if(this.props.screen_id == \"0\"){\r\n            Sidebar = <Category categoryChange={this.categoryChange} selected_category={this.state.selected_category}/>\r\n            filter  = <Filter respondingChange={this.props.respondingChange}/>;\r\n        }\r\n\r\n        const { error, isLoaded, item } = this.state;\r\n        if (error) {\r\n            return <div className=\"mx-auto mt-3\">Ошибка: {error.message}</div>;\r\n        } \r\n        else if (!isLoaded) {\r\n            return <Loading />\r\n        }\r\n        else {\r\n            return (\r\n                <main className=\"mt-2\" id=\"wrapper\">\r\n                    {Sidebar}\r\n                    <div id=\"page-content-wrapper\" className=\"d-flex\">\r\n                        <div className=\"center-field flex-fill\">\r\n                            {filter}\r\n                            <div className=\"request-list\">\r\n                                {this.state.items.map(item => {\r\n                                    return <RequestComponent key={item.request_id} type={this.props.screen_id}  data={item} respondingChange={this.props.respondingChange}/>\r\n                                })}\r\n                            </div>\r\n                        </div>  \r\n                        <div className=\"right-side d-none d-xl-block\" style={{minWidth: 250}}></div>\r\n                    </div>\r\n                </main>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default RequestList"]},"metadata":{},"sourceType":"module"}