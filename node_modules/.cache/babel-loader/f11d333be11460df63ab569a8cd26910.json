{"ast":null,"code":"import _classCallCheck from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Applications/MAMP/htdocs/react-app-07/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/react-app-07/src/screens/content/respond/respond.screen.js\";\nimport React from 'react';\nimport RespondTop from './respond_top';\nimport MyAnswerBottom from './respond_bottom/myAnswer';\nimport AnswersToMeBottom from './respond_bottom/answersToMe';\nimport MyRespondChanger from './respond_bottom/respondChanger';\nimport Loading from '../../common_components/loading';\nimport Fetch from '../../service/fetch';\n\nvar RespondScreen =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RespondScreen, _React$Component);\n\n  function RespondScreen(props) {\n    var _this;\n\n    _classCallCheck(this, RespondScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RespondScreen).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    _this.updateComponentHandle = _this.updateComponentHandle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(RespondScreen, [{\n    key: \"updateComponentHandle\",\n    value: function updateComponentHandle() {\n      var _this2 = this;\n\n      alert(\"update\");\n      this.setState({\n        isLoaded: false,\n        items: [],\n        error: null\n      });\n      var path;\n\n      switch (this.props.screen_id) {\n        case \"0\":\n          path = 'react-app-07/src/screens/content/respond/php/myAnswerLoad.php';\n          break;\n\n        case \"1\":\n          path = 'react-app-07/src/screens/content/respond/php/answerToMeLoad.php';\n          break;\n\n        case \"2\":\n          path = 'react-app-07/src/screens/content/respond/php/respondChangeLoad.php';\n          break;\n      }\n\n      Fetch.getData(path, {\n        request_id: this.props.request_id,\n        user_id: this.props.user_id\n      }).then(function (result) {\n        return _this2.setState({\n          isLoaded: true,\n          items: result,\n          error: null\n        });\n      }, function (error) {\n        return _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateComponentHandle();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.screen_id != prevProps.screen_id) {\n        this.updateComponentHandle();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded;\n      var bottomPart;\n\n      switch (this.props.screen_id) {\n        case \"0\":\n          bottomPart = React.createElement(MyAnswerBottom, {\n            user_id: this.props.user_id,\n            request_id: this.props.request_id,\n            respondingChange: this.props.respondingChange,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          });\n          break;\n\n        case \"1\":\n          if (this.state.items.length >= 2) {\n            bottomPart = React.createElement(AnswersToMeBottom, {\n              user_id: this.props.user_id,\n              request_id: this.props.request_id,\n              items: this.state.items[1],\n              respondingChange: this.props.respondingChange,\n              updateComponentHandle: this.props.updateComponentHandle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            });\n          }\n\n          break;\n\n        case \"2\":\n          if (this.state.items.length == 2) {\n            bottomPart = React.createElement(MyRespondChanger, {\n              user_id: this.props.user_id,\n              request_id: this.props.request_id,\n              items: this.state.items[1],\n              respondingChange: this.props.respondingChange,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            });\n          }\n\n          break;\n      }\n\n      if (error) {\n        return React.createElement(\"div\", {\n          className: \"mx-auto mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(Loading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(RespondTop, {\n          screen_id: this.props.screen_id,\n          data: this.state.items[0],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), bottomPart);\n      }\n    }\n  }]);\n\n  return RespondScreen;\n}(React.Component);\n\nexport default RespondScreen;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/react-app-07/src/screens/content/respond/respond.screen.js"],"names":["React","RespondTop","MyAnswerBottom","AnswersToMeBottom","MyRespondChanger","Loading","Fetch","RespondScreen","props","state","error","isLoaded","items","updateComponentHandle","bind","alert","setState","path","screen_id","getData","request_id","user_id","then","result","prevProps","bottomPart","respondingChange","length","message","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nimport RespondTop from './respond_top'\r\nimport MyAnswerBottom from './respond_bottom/myAnswer'\r\nimport AnswersToMeBottom from './respond_bottom/answersToMe'\r\nimport MyRespondChanger from './respond_bottom/respondChanger'\r\nimport Loading from '../../common_components/loading'\r\n\r\nimport Fetch from '../../service/fetch'\r\n\r\nclass RespondScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n        this.updateComponentHandle = this.updateComponentHandle.bind(this);\r\n    }\r\n\r\n    updateComponentHandle(){\r\n        alert(\"update\")\r\n        this.setState({isLoaded: false,items: [], error: null})\r\n        let path;\r\n        switch(this.props.screen_id){\r\n            case \"0\":\r\n                path = 'react-app-07/src/screens/content/respond/php/myAnswerLoad.php';\r\n                break;\r\n            case \"1\":\r\n                path = 'react-app-07/src/screens/content/respond/php/answerToMeLoad.php';\r\n                break;\r\n            case \"2\":\r\n                path = 'react-app-07/src/screens/content/respond/php/respondChangeLoad.php'\r\n                break;\r\n        }\r\n        Fetch.getData(path, {request_id: this.props.request_id, user_id: this.props.user_id})\r\n            .then((result) => this.setState({isLoaded: true,items: result, error: null}),\r\n                  (error) => this.setState({isLoaded: true, error}))\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.updateComponentHandle();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.screen_id != prevProps.screen_id){\r\n            this.updateComponentHandle();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {error, isLoaded} = this.state;\r\n        let bottomPart;\r\n        switch(this.props.screen_id){\r\n            case \"0\":\r\n                bottomPart = <MyAnswerBottom \r\n                                user_id={this.props.user_id} \r\n                                request_id={this.props.request_id} \r\n                                respondingChange={this.props.respondingChange}/>\r\n                break;\r\n            case \"1\":\r\n                if(this.state.items.length >=2){\r\n                    bottomPart = <AnswersToMeBottom \r\n                                user_id={this.props.user_id} \r\n                                request_id={this.props.request_id} \r\n                                items={this.state.items[1]} \r\n                                respondingChange={this.props.respondingChange}\r\n                                updateComponentHandle={this.props.updateComponentHandle}/>\r\n                }\r\n                break;\r\n            case \"2\":\r\n                if(this.state.items.length ==2){\r\n                    bottomPart = <MyRespondChanger  \r\n                                user_id={this.props.user_id} \r\n                                request_id={this.props.request_id} \r\n                                items={this.state.items[1]} \r\n                                respondingChange={this.props.respondingChange} />\r\n                }\r\n                break;\r\n        }\r\n        \r\n        if (error) {\r\n            return <div className=\"mx-auto mt-3\">Ошибка: {error.message}</div>;\r\n        } \r\n        else if (!isLoaded) {\r\n            return <Loading />\r\n        }\r\n        else {\r\n            return( \r\n                <React.Fragment>\r\n                    <RespondTop screen_id={this.props.screen_id} data={this.state.items[0]}/>\r\n                    {bottomPart}\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default RespondScreen"]},"metadata":{},"sourceType":"module"}